// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cardchain/cardchain/query.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cardchain.Cardchain {
  /// <summary>
  /// Query defines the gRPC querier service.
  /// </summary>
  public static partial class Query
  {
    static readonly string __ServiceName = "cardchain.cardchain.Query";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryParamsRequest> __Marshaller_cardchain_cardchain_QueryParamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryParamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryParamsResponse> __Marshaller_cardchain_cardchain_QueryParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryParamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCardRequest> __Marshaller_cardchain_cardchain_QueryCardRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCardRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCardResponse> __Marshaller_cardchain_cardchain_QueryCardResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCardResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryUserRequest> __Marshaller_cardchain_cardchain_QueryUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryUserResponse> __Marshaller_cardchain_cardchain_QueryUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCardsRequest> __Marshaller_cardchain_cardchain_QueryCardsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCardsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCardsResponse> __Marshaller_cardchain_cardchain_QueryCardsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCardsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryMatchRequest> __Marshaller_cardchain_cardchain_QueryMatchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryMatchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryMatchResponse> __Marshaller_cardchain_cardchain_QueryMatchResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryMatchResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QuerySetRequest> __Marshaller_cardchain_cardchain_QuerySetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QuerySetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QuerySetResponse> __Marshaller_cardchain_cardchain_QuerySetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QuerySetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QuerySellOfferRequest> __Marshaller_cardchain_cardchain_QuerySellOfferRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QuerySellOfferRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QuerySellOfferResponse> __Marshaller_cardchain_cardchain_QuerySellOfferResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QuerySellOfferResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCouncilRequest> __Marshaller_cardchain_cardchain_QueryCouncilRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCouncilRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCouncilResponse> __Marshaller_cardchain_cardchain_QueryCouncilResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCouncilResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryServerRequest> __Marshaller_cardchain_cardchain_QueryServerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryServerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryServerResponse> __Marshaller_cardchain_cardchain_QueryServerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryServerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryEncounterRequest> __Marshaller_cardchain_cardchain_QueryEncounterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryEncounterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryEncounterResponse> __Marshaller_cardchain_cardchain_QueryEncounterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryEncounterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryEncountersRequest> __Marshaller_cardchain_cardchain_QueryEncountersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryEncountersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryEncountersResponse> __Marshaller_cardchain_cardchain_QueryEncountersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryEncountersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryEncounterWithImageRequest> __Marshaller_cardchain_cardchain_QueryEncounterWithImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryEncounterWithImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryEncounterWithImageResponse> __Marshaller_cardchain_cardchain_QueryEncounterWithImageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryEncounterWithImageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryEncountersWithImageRequest> __Marshaller_cardchain_cardchain_QueryEncountersWithImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryEncountersWithImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryEncountersWithImageResponse> __Marshaller_cardchain_cardchain_QueryEncountersWithImageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryEncountersWithImageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCardchainInfoRequest> __Marshaller_cardchain_cardchain_QueryCardchainInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCardchainInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCardchainInfoResponse> __Marshaller_cardchain_cardchain_QueryCardchainInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCardchainInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QuerySetRarityDistributionRequest> __Marshaller_cardchain_cardchain_QuerySetRarityDistributionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QuerySetRarityDistributionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QuerySetRarityDistributionResponse> __Marshaller_cardchain_cardchain_QuerySetRarityDistributionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QuerySetRarityDistributionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryAccountFromZealyRequest> __Marshaller_cardchain_cardchain_QueryAccountFromZealyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryAccountFromZealyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryAccountFromZealyResponse> __Marshaller_cardchain_cardchain_QueryAccountFromZealyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryAccountFromZealyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryVotingResultsRequest> __Marshaller_cardchain_cardchain_QueryVotingResultsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryVotingResultsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryVotingResultsResponse> __Marshaller_cardchain_cardchain_QueryVotingResultsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryVotingResultsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryMatchesRequest> __Marshaller_cardchain_cardchain_QueryMatchesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryMatchesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryMatchesResponse> __Marshaller_cardchain_cardchain_QueryMatchesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryMatchesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QuerySetsRequest> __Marshaller_cardchain_cardchain_QuerySetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QuerySetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QuerySetsResponse> __Marshaller_cardchain_cardchain_QuerySetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QuerySetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCardContentRequest> __Marshaller_cardchain_cardchain_QueryCardContentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCardContentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCardContentResponse> __Marshaller_cardchain_cardchain_QueryCardContentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCardContentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCardContentsRequest> __Marshaller_cardchain_cardchain_QueryCardContentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCardContentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QueryCardContentsResponse> __Marshaller_cardchain_cardchain_QueryCardContentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QueryCardContentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QuerySellOffersRequest> __Marshaller_cardchain_cardchain_QuerySellOffersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QuerySellOffersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cardchain.Cardchain.QuerySellOffersResponse> __Marshaller_cardchain_cardchain_QuerySellOffersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cardchain.Cardchain.QuerySellOffersResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryParamsRequest, global::Cardchain.Cardchain.QueryParamsResponse> __Method_Params = new grpc::Method<global::Cardchain.Cardchain.QueryParamsRequest, global::Cardchain.Cardchain.QueryParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Params",
        __Marshaller_cardchain_cardchain_QueryParamsRequest,
        __Marshaller_cardchain_cardchain_QueryParamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryCardRequest, global::Cardchain.Cardchain.QueryCardResponse> __Method_Card = new grpc::Method<global::Cardchain.Cardchain.QueryCardRequest, global::Cardchain.Cardchain.QueryCardResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Card",
        __Marshaller_cardchain_cardchain_QueryCardRequest,
        __Marshaller_cardchain_cardchain_QueryCardResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryUserRequest, global::Cardchain.Cardchain.QueryUserResponse> __Method_User = new grpc::Method<global::Cardchain.Cardchain.QueryUserRequest, global::Cardchain.Cardchain.QueryUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "User",
        __Marshaller_cardchain_cardchain_QueryUserRequest,
        __Marshaller_cardchain_cardchain_QueryUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryCardsRequest, global::Cardchain.Cardchain.QueryCardsResponse> __Method_Cards = new grpc::Method<global::Cardchain.Cardchain.QueryCardsRequest, global::Cardchain.Cardchain.QueryCardsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Cards",
        __Marshaller_cardchain_cardchain_QueryCardsRequest,
        __Marshaller_cardchain_cardchain_QueryCardsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryMatchRequest, global::Cardchain.Cardchain.QueryMatchResponse> __Method_Match = new grpc::Method<global::Cardchain.Cardchain.QueryMatchRequest, global::Cardchain.Cardchain.QueryMatchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Match",
        __Marshaller_cardchain_cardchain_QueryMatchRequest,
        __Marshaller_cardchain_cardchain_QueryMatchResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QuerySetRequest, global::Cardchain.Cardchain.QuerySetResponse> __Method_Set = new grpc::Method<global::Cardchain.Cardchain.QuerySetRequest, global::Cardchain.Cardchain.QuerySetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Set",
        __Marshaller_cardchain_cardchain_QuerySetRequest,
        __Marshaller_cardchain_cardchain_QuerySetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QuerySellOfferRequest, global::Cardchain.Cardchain.QuerySellOfferResponse> __Method_SellOffer = new grpc::Method<global::Cardchain.Cardchain.QuerySellOfferRequest, global::Cardchain.Cardchain.QuerySellOfferResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellOffer",
        __Marshaller_cardchain_cardchain_QuerySellOfferRequest,
        __Marshaller_cardchain_cardchain_QuerySellOfferResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryCouncilRequest, global::Cardchain.Cardchain.QueryCouncilResponse> __Method_Council = new grpc::Method<global::Cardchain.Cardchain.QueryCouncilRequest, global::Cardchain.Cardchain.QueryCouncilResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Council",
        __Marshaller_cardchain_cardchain_QueryCouncilRequest,
        __Marshaller_cardchain_cardchain_QueryCouncilResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryServerRequest, global::Cardchain.Cardchain.QueryServerResponse> __Method_Server = new grpc::Method<global::Cardchain.Cardchain.QueryServerRequest, global::Cardchain.Cardchain.QueryServerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Server",
        __Marshaller_cardchain_cardchain_QueryServerRequest,
        __Marshaller_cardchain_cardchain_QueryServerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryEncounterRequest, global::Cardchain.Cardchain.QueryEncounterResponse> __Method_Encounter = new grpc::Method<global::Cardchain.Cardchain.QueryEncounterRequest, global::Cardchain.Cardchain.QueryEncounterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Encounter",
        __Marshaller_cardchain_cardchain_QueryEncounterRequest,
        __Marshaller_cardchain_cardchain_QueryEncounterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryEncountersRequest, global::Cardchain.Cardchain.QueryEncountersResponse> __Method_Encounters = new grpc::Method<global::Cardchain.Cardchain.QueryEncountersRequest, global::Cardchain.Cardchain.QueryEncountersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Encounters",
        __Marshaller_cardchain_cardchain_QueryEncountersRequest,
        __Marshaller_cardchain_cardchain_QueryEncountersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryEncounterWithImageRequest, global::Cardchain.Cardchain.QueryEncounterWithImageResponse> __Method_EncounterWithImage = new grpc::Method<global::Cardchain.Cardchain.QueryEncounterWithImageRequest, global::Cardchain.Cardchain.QueryEncounterWithImageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EncounterWithImage",
        __Marshaller_cardchain_cardchain_QueryEncounterWithImageRequest,
        __Marshaller_cardchain_cardchain_QueryEncounterWithImageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryEncountersWithImageRequest, global::Cardchain.Cardchain.QueryEncountersWithImageResponse> __Method_EncountersWithImage = new grpc::Method<global::Cardchain.Cardchain.QueryEncountersWithImageRequest, global::Cardchain.Cardchain.QueryEncountersWithImageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EncountersWithImage",
        __Marshaller_cardchain_cardchain_QueryEncountersWithImageRequest,
        __Marshaller_cardchain_cardchain_QueryEncountersWithImageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryCardchainInfoRequest, global::Cardchain.Cardchain.QueryCardchainInfoResponse> __Method_CardchainInfo = new grpc::Method<global::Cardchain.Cardchain.QueryCardchainInfoRequest, global::Cardchain.Cardchain.QueryCardchainInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CardchainInfo",
        __Marshaller_cardchain_cardchain_QueryCardchainInfoRequest,
        __Marshaller_cardchain_cardchain_QueryCardchainInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QuerySetRarityDistributionRequest, global::Cardchain.Cardchain.QuerySetRarityDistributionResponse> __Method_SetRarityDistribution = new grpc::Method<global::Cardchain.Cardchain.QuerySetRarityDistributionRequest, global::Cardchain.Cardchain.QuerySetRarityDistributionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetRarityDistribution",
        __Marshaller_cardchain_cardchain_QuerySetRarityDistributionRequest,
        __Marshaller_cardchain_cardchain_QuerySetRarityDistributionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryAccountFromZealyRequest, global::Cardchain.Cardchain.QueryAccountFromZealyResponse> __Method_AccountFromZealy = new grpc::Method<global::Cardchain.Cardchain.QueryAccountFromZealyRequest, global::Cardchain.Cardchain.QueryAccountFromZealyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AccountFromZealy",
        __Marshaller_cardchain_cardchain_QueryAccountFromZealyRequest,
        __Marshaller_cardchain_cardchain_QueryAccountFromZealyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryVotingResultsRequest, global::Cardchain.Cardchain.QueryVotingResultsResponse> __Method_VotingResults = new grpc::Method<global::Cardchain.Cardchain.QueryVotingResultsRequest, global::Cardchain.Cardchain.QueryVotingResultsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VotingResults",
        __Marshaller_cardchain_cardchain_QueryVotingResultsRequest,
        __Marshaller_cardchain_cardchain_QueryVotingResultsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryMatchesRequest, global::Cardchain.Cardchain.QueryMatchesResponse> __Method_Matches = new grpc::Method<global::Cardchain.Cardchain.QueryMatchesRequest, global::Cardchain.Cardchain.QueryMatchesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Matches",
        __Marshaller_cardchain_cardchain_QueryMatchesRequest,
        __Marshaller_cardchain_cardchain_QueryMatchesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QuerySetsRequest, global::Cardchain.Cardchain.QuerySetsResponse> __Method_Sets = new grpc::Method<global::Cardchain.Cardchain.QuerySetsRequest, global::Cardchain.Cardchain.QuerySetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Sets",
        __Marshaller_cardchain_cardchain_QuerySetsRequest,
        __Marshaller_cardchain_cardchain_QuerySetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryCardContentRequest, global::Cardchain.Cardchain.QueryCardContentResponse> __Method_CardContent = new grpc::Method<global::Cardchain.Cardchain.QueryCardContentRequest, global::Cardchain.Cardchain.QueryCardContentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CardContent",
        __Marshaller_cardchain_cardchain_QueryCardContentRequest,
        __Marshaller_cardchain_cardchain_QueryCardContentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QueryCardContentsRequest, global::Cardchain.Cardchain.QueryCardContentsResponse> __Method_CardContents = new grpc::Method<global::Cardchain.Cardchain.QueryCardContentsRequest, global::Cardchain.Cardchain.QueryCardContentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CardContents",
        __Marshaller_cardchain_cardchain_QueryCardContentsRequest,
        __Marshaller_cardchain_cardchain_QueryCardContentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cardchain.Cardchain.QuerySellOffersRequest, global::Cardchain.Cardchain.QuerySellOffersResponse> __Method_SellOffers = new grpc::Method<global::Cardchain.Cardchain.QuerySellOffersRequest, global::Cardchain.Cardchain.QuerySellOffersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellOffers",
        __Marshaller_cardchain_cardchain_QuerySellOffersRequest,
        __Marshaller_cardchain_cardchain_QuerySellOffersResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cardchain.Cardchain.QueryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Query</summary>
    public partial class QueryClient : grpc::ClientBase<QueryClient>
    {
      /// <summary>Creates a new client for Query</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Query that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Parameters queries the parameters of the module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryParamsResponse Params(global::Cardchain.Cardchain.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Params(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Parameters queries the parameters of the module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryParamsResponse Params(global::Cardchain.Cardchain.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// Parameters queries the parameters of the module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryParamsResponse> ParamsAsync(global::Cardchain.Cardchain.QueryParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Parameters queries the parameters of the module.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryParamsResponse> ParamsAsync(global::Cardchain.Cardchain.QueryParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Params, null, options, request);
      }
      /// <summary>
      /// Queries a list of Card items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCardResponse Card(global::Cardchain.Cardchain.QueryCardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Card(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Card items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCardResponse Card(global::Cardchain.Cardchain.QueryCardRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Card, null, options, request);
      }
      /// <summary>
      /// Queries a list of Card items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCardResponse> CardAsync(global::Cardchain.Cardchain.QueryCardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CardAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Card items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCardResponse> CardAsync(global::Cardchain.Cardchain.QueryCardRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Card, null, options, request);
      }
      /// <summary>
      /// Queries a list of User items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryUserResponse User(global::Cardchain.Cardchain.QueryUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return User(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of User items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryUserResponse User(global::Cardchain.Cardchain.QueryUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_User, null, options, request);
      }
      /// <summary>
      /// Queries a list of User items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryUserResponse> UserAsync(global::Cardchain.Cardchain.QueryUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of User items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryUserResponse> UserAsync(global::Cardchain.Cardchain.QueryUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_User, null, options, request);
      }
      /// <summary>
      /// Queries a list of Cards items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCardsResponse Cards(global::Cardchain.Cardchain.QueryCardsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Cards(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Cards items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCardsResponse Cards(global::Cardchain.Cardchain.QueryCardsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Cards, null, options, request);
      }
      /// <summary>
      /// Queries a list of Cards items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCardsResponse> CardsAsync(global::Cardchain.Cardchain.QueryCardsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CardsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Cards items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCardsResponse> CardsAsync(global::Cardchain.Cardchain.QueryCardsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Cards, null, options, request);
      }
      /// <summary>
      /// Queries a list of Match items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryMatchResponse Match(global::Cardchain.Cardchain.QueryMatchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Match(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Match items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryMatchResponse Match(global::Cardchain.Cardchain.QueryMatchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Match, null, options, request);
      }
      /// <summary>
      /// Queries a list of Match items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryMatchResponse> MatchAsync(global::Cardchain.Cardchain.QueryMatchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MatchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Match items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryMatchResponse> MatchAsync(global::Cardchain.Cardchain.QueryMatchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Match, null, options, request);
      }
      /// <summary>
      /// Queries a list of Set items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QuerySetResponse Set(global::Cardchain.Cardchain.QuerySetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Set(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Set items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QuerySetResponse Set(global::Cardchain.Cardchain.QuerySetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Set, null, options, request);
      }
      /// <summary>
      /// Queries a list of Set items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QuerySetResponse> SetAsync(global::Cardchain.Cardchain.QuerySetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Set items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QuerySetResponse> SetAsync(global::Cardchain.Cardchain.QuerySetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Set, null, options, request);
      }
      /// <summary>
      /// Queries a list of SellOffer items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QuerySellOfferResponse SellOffer(global::Cardchain.Cardchain.QuerySellOfferRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SellOffer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of SellOffer items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QuerySellOfferResponse SellOffer(global::Cardchain.Cardchain.QuerySellOfferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellOffer, null, options, request);
      }
      /// <summary>
      /// Queries a list of SellOffer items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QuerySellOfferResponse> SellOfferAsync(global::Cardchain.Cardchain.QuerySellOfferRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SellOfferAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of SellOffer items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QuerySellOfferResponse> SellOfferAsync(global::Cardchain.Cardchain.QuerySellOfferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellOffer, null, options, request);
      }
      /// <summary>
      /// Queries a list of Council items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCouncilResponse Council(global::Cardchain.Cardchain.QueryCouncilRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Council(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Council items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCouncilResponse Council(global::Cardchain.Cardchain.QueryCouncilRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Council, null, options, request);
      }
      /// <summary>
      /// Queries a list of Council items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCouncilResponse> CouncilAsync(global::Cardchain.Cardchain.QueryCouncilRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CouncilAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Council items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCouncilResponse> CouncilAsync(global::Cardchain.Cardchain.QueryCouncilRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Council, null, options, request);
      }
      /// <summary>
      /// Queries a list of Server items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryServerResponse Server(global::Cardchain.Cardchain.QueryServerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Server(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Server items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryServerResponse Server(global::Cardchain.Cardchain.QueryServerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Server, null, options, request);
      }
      /// <summary>
      /// Queries a list of Server items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryServerResponse> ServerAsync(global::Cardchain.Cardchain.QueryServerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ServerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Server items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryServerResponse> ServerAsync(global::Cardchain.Cardchain.QueryServerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Server, null, options, request);
      }
      /// <summary>
      /// Queries a list of Encounter items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryEncounterResponse Encounter(global::Cardchain.Cardchain.QueryEncounterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Encounter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Encounter items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryEncounterResponse Encounter(global::Cardchain.Cardchain.QueryEncounterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Encounter, null, options, request);
      }
      /// <summary>
      /// Queries a list of Encounter items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryEncounterResponse> EncounterAsync(global::Cardchain.Cardchain.QueryEncounterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EncounterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Encounter items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryEncounterResponse> EncounterAsync(global::Cardchain.Cardchain.QueryEncounterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Encounter, null, options, request);
      }
      /// <summary>
      /// Queries a list of Encounters items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryEncountersResponse Encounters(global::Cardchain.Cardchain.QueryEncountersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Encounters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Encounters items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryEncountersResponse Encounters(global::Cardchain.Cardchain.QueryEncountersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Encounters, null, options, request);
      }
      /// <summary>
      /// Queries a list of Encounters items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryEncountersResponse> EncountersAsync(global::Cardchain.Cardchain.QueryEncountersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EncountersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Encounters items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryEncountersResponse> EncountersAsync(global::Cardchain.Cardchain.QueryEncountersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Encounters, null, options, request);
      }
      /// <summary>
      /// Queries a list of EncounterWithImage items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryEncounterWithImageResponse EncounterWithImage(global::Cardchain.Cardchain.QueryEncounterWithImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EncounterWithImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of EncounterWithImage items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryEncounterWithImageResponse EncounterWithImage(global::Cardchain.Cardchain.QueryEncounterWithImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EncounterWithImage, null, options, request);
      }
      /// <summary>
      /// Queries a list of EncounterWithImage items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryEncounterWithImageResponse> EncounterWithImageAsync(global::Cardchain.Cardchain.QueryEncounterWithImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EncounterWithImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of EncounterWithImage items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryEncounterWithImageResponse> EncounterWithImageAsync(global::Cardchain.Cardchain.QueryEncounterWithImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EncounterWithImage, null, options, request);
      }
      /// <summary>
      /// Queries a list of EncountersWithImage items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryEncountersWithImageResponse EncountersWithImage(global::Cardchain.Cardchain.QueryEncountersWithImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EncountersWithImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of EncountersWithImage items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryEncountersWithImageResponse EncountersWithImage(global::Cardchain.Cardchain.QueryEncountersWithImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EncountersWithImage, null, options, request);
      }
      /// <summary>
      /// Queries a list of EncountersWithImage items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryEncountersWithImageResponse> EncountersWithImageAsync(global::Cardchain.Cardchain.QueryEncountersWithImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EncountersWithImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of EncountersWithImage items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryEncountersWithImageResponse> EncountersWithImageAsync(global::Cardchain.Cardchain.QueryEncountersWithImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EncountersWithImage, null, options, request);
      }
      /// <summary>
      /// Queries a list of CardchainInfo items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCardchainInfoResponse CardchainInfo(global::Cardchain.Cardchain.QueryCardchainInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CardchainInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of CardchainInfo items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCardchainInfoResponse CardchainInfo(global::Cardchain.Cardchain.QueryCardchainInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CardchainInfo, null, options, request);
      }
      /// <summary>
      /// Queries a list of CardchainInfo items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCardchainInfoResponse> CardchainInfoAsync(global::Cardchain.Cardchain.QueryCardchainInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CardchainInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of CardchainInfo items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCardchainInfoResponse> CardchainInfoAsync(global::Cardchain.Cardchain.QueryCardchainInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CardchainInfo, null, options, request);
      }
      /// <summary>
      /// Queries a list of SetRarityDistribution items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QuerySetRarityDistributionResponse SetRarityDistribution(global::Cardchain.Cardchain.QuerySetRarityDistributionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetRarityDistribution(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of SetRarityDistribution items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QuerySetRarityDistributionResponse SetRarityDistribution(global::Cardchain.Cardchain.QuerySetRarityDistributionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetRarityDistribution, null, options, request);
      }
      /// <summary>
      /// Queries a list of SetRarityDistribution items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QuerySetRarityDistributionResponse> SetRarityDistributionAsync(global::Cardchain.Cardchain.QuerySetRarityDistributionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetRarityDistributionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of SetRarityDistribution items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QuerySetRarityDistributionResponse> SetRarityDistributionAsync(global::Cardchain.Cardchain.QuerySetRarityDistributionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetRarityDistribution, null, options, request);
      }
      /// <summary>
      /// Queries a list of AccountFromZealy items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryAccountFromZealyResponse AccountFromZealy(global::Cardchain.Cardchain.QueryAccountFromZealyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountFromZealy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of AccountFromZealy items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryAccountFromZealyResponse AccountFromZealy(global::Cardchain.Cardchain.QueryAccountFromZealyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AccountFromZealy, null, options, request);
      }
      /// <summary>
      /// Queries a list of AccountFromZealy items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryAccountFromZealyResponse> AccountFromZealyAsync(global::Cardchain.Cardchain.QueryAccountFromZealyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccountFromZealyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of AccountFromZealy items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryAccountFromZealyResponse> AccountFromZealyAsync(global::Cardchain.Cardchain.QueryAccountFromZealyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AccountFromZealy, null, options, request);
      }
      /// <summary>
      /// Queries a list of VotingResults items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryVotingResultsResponse VotingResults(global::Cardchain.Cardchain.QueryVotingResultsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VotingResults(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of VotingResults items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryVotingResultsResponse VotingResults(global::Cardchain.Cardchain.QueryVotingResultsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VotingResults, null, options, request);
      }
      /// <summary>
      /// Queries a list of VotingResults items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryVotingResultsResponse> VotingResultsAsync(global::Cardchain.Cardchain.QueryVotingResultsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VotingResultsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of VotingResults items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryVotingResultsResponse> VotingResultsAsync(global::Cardchain.Cardchain.QueryVotingResultsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VotingResults, null, options, request);
      }
      /// <summary>
      /// Queries a list of Matches items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryMatchesResponse Matches(global::Cardchain.Cardchain.QueryMatchesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Matches(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Matches items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryMatchesResponse Matches(global::Cardchain.Cardchain.QueryMatchesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Matches, null, options, request);
      }
      /// <summary>
      /// Queries a list of Matches items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryMatchesResponse> MatchesAsync(global::Cardchain.Cardchain.QueryMatchesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MatchesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Matches items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryMatchesResponse> MatchesAsync(global::Cardchain.Cardchain.QueryMatchesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Matches, null, options, request);
      }
      /// <summary>
      /// Queries a list of Sets items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QuerySetsResponse Sets(global::Cardchain.Cardchain.QuerySetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Sets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Sets items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QuerySetsResponse Sets(global::Cardchain.Cardchain.QuerySetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Sets, null, options, request);
      }
      /// <summary>
      /// Queries a list of Sets items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QuerySetsResponse> SetsAsync(global::Cardchain.Cardchain.QuerySetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of Sets items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QuerySetsResponse> SetsAsync(global::Cardchain.Cardchain.QuerySetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Sets, null, options, request);
      }
      /// <summary>
      /// Queries a list of CardContent items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCardContentResponse CardContent(global::Cardchain.Cardchain.QueryCardContentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CardContent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of CardContent items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCardContentResponse CardContent(global::Cardchain.Cardchain.QueryCardContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CardContent, null, options, request);
      }
      /// <summary>
      /// Queries a list of CardContent items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCardContentResponse> CardContentAsync(global::Cardchain.Cardchain.QueryCardContentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CardContentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of CardContent items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCardContentResponse> CardContentAsync(global::Cardchain.Cardchain.QueryCardContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CardContent, null, options, request);
      }
      /// <summary>
      /// Queries a list of CardContents items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCardContentsResponse CardContents(global::Cardchain.Cardchain.QueryCardContentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CardContents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of CardContents items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QueryCardContentsResponse CardContents(global::Cardchain.Cardchain.QueryCardContentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CardContents, null, options, request);
      }
      /// <summary>
      /// Queries a list of CardContents items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCardContentsResponse> CardContentsAsync(global::Cardchain.Cardchain.QueryCardContentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CardContentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of CardContents items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QueryCardContentsResponse> CardContentsAsync(global::Cardchain.Cardchain.QueryCardContentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CardContents, null, options, request);
      }
      /// <summary>
      /// Queries a list of SellOffers items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QuerySellOffersResponse SellOffers(global::Cardchain.Cardchain.QuerySellOffersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SellOffers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of SellOffers items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cardchain.Cardchain.QuerySellOffersResponse SellOffers(global::Cardchain.Cardchain.QuerySellOffersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellOffers, null, options, request);
      }
      /// <summary>
      /// Queries a list of SellOffers items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QuerySellOffersResponse> SellOffersAsync(global::Cardchain.Cardchain.QuerySellOffersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SellOffersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Queries a list of SellOffers items.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cardchain.Cardchain.QuerySellOffersResponse> SellOffersAsync(global::Cardchain.Cardchain.QuerySellOffersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellOffers, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override QueryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryClient(configuration);
      }
    }

  }
}
#endregion
